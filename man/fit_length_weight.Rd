% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/growth.R
\name{fit_length_weight}
\alias{fit_length_weight}
\title{Fit a length-weight model}
\usage{
fit_length_weight(
  dat,
  sex = c("female", "male", "all"),
  downsample = Inf,
  min_samples = 50L,
  method = c("tmb", "rlm", "lm"),
  df = 3,
  too_high_quantile = 1,
  usability_codes = c(0, 1, 2, 6),
  scale_weight = 1/1000
)
}
\arguments{
\item{dat}{Input data frame. Should be from \code{\link[=get_survey_samples]{get_survey_samples()}} or
\code{\link[=get_commercial_samples]{get_commercial_samples()}}.}

\item{sex}{Either "male" or "female".}

\item{downsample}{If not \code{Inf} this represents a number of fish specimens to
sample prior to model fitting. Can be useful for large data sets that you
want to fit with MCMC for testing purposes.}

\item{min_samples}{The minimum number of fish before a model will be fit.}

\item{method}{\code{"rlm"} for \code{\link[MASS:rlm]{MASS::rlm()}} or \code{"lm"} for \code{\link[stats:lm]{stats::lm()}}.
\code{"tmb"} for a regression fit with TMB that uses Student-t errors with
a degrees of freedom defined by the argument \code{df}.}

\item{df}{The fixed degrees of freedom to use if \code{method = "tmb"}. Large
values (say over 100) are effectively the normal distribution. Small
values make the distribution more robust to outliers. The model may
become unstable if \code{df < 2}.}

\item{too_high_quantile}{A quantile above which to discard weights and
lengths. Can be useful for outliers. Defaults to including all data.}

\item{usability_codes}{An optional vector of usability codes.
All usability codes not in this vector will be omitted.
Set to \code{NULL} to include all samples.}

\item{scale_weight}{A value to multiply all weights by. Useful for changing
units.}
}
\description{
For use with data for a single species.
}
\examples{
\dontrun{
d <- get_survey_samples("pacific ocean perch")
model_f <- fit_length_weight(d, sex = "female")
model_m <- fit_length_weight(d, sex = "male")
plot_length_weight(object_female = model_f, object_male = model_m)
}
}
